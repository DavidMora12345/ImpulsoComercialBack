version: '3.8'

services:
  # Base de datos PostgreSQL + PostGIS
  postgres:
    image: postgis/postgis:16-3.4
    container_name: comercial-postgres
    environment:
      POSTGRES_DB: comercial_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Puerto 5433 para no conflicto con PostgreSQL local
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - comercial-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend - Spring Boot
  backend:
    build:
      context: ./ImpulsoComercialBack/PComercialTest
      dockerfile: Dockerfile
    container_name: comercial-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/comercial_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - comercial-network
    restart: unless-stopped

  # Frontend - Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: comercial-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    depends_on:
      - backend
    networks:
      - comercial-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  comercial-network:
    driver: bridge
